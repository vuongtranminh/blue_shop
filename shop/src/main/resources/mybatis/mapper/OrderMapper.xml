<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blue.shop.mybatis.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.blue.shop.mybatis.entity.OrderPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="buyer_id" jdbcType="BIGINT" property="buyerId" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="buyer_name" jdbcType="VARCHAR" property="buyerName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="commune" jdbcType="VARCHAR" property="commune" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="paymented_at" jdbcType="TIMESTAMP" property="paymentedAt" />
    <result column="delivered_at" jdbcType="TIMESTAMP" property="deliveredAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blue.shop.mybatis.entity.OrderPo">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    id, buyer_id, total_price, buyer_name, address, phone, commune, district, city, `status`, is_deleted, created_at,
    updated_at, paymented_at, delivered_at
  </sql>
  <sql id="Blob_Column_List">
    note
  </sql>
  <!-- <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, buyer_id, total_price, buyer_name, addressPo, phone, `status`, is_deleted, created_at,
    updated_at, paymented_at, delivered_at
  </sql>
  <select id="selectByExample" parameterType="com.blue.shop.mybatis.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orderPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      orderPo by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderPo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from orderPo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blue.shop.mybatis.entity.OrderExample">
    delete from orderPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    insert into orderPo (id, buyer_id, total_price,
      buyer_name, addressPo, phone,
      `status`, is_deleted, created_at, 
      updated_at, paymented_at, delivered_at
      )
    values (#{id,jdbcType=BIGINT}, #{buyerId,jdbcType=BIGINT}, #{totalPrice,jdbcType=DECIMAL}, 
      #{buyerName,jdbcType=VARCHAR}, #{addressPo,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{paymentedAt,jdbcType=TIMESTAMP}, #{deliveredAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    insert into orderPo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="buyerName != null">
        buyer_name,
      </if>
      <if test="addressPo != null">
        addressPo,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="paymentedAt != null">
        paymented_at,
      </if>
      <if test="deliveredAt != null">
        delivered_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="buyerName != null">
        #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="addressPo != null">
        #{addressPo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentedAt != null">
        #{paymentedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveredAt != null">
        #{deliveredAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blue.shop.mybatis.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from orderPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderPo
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.buyerId != null">
        buyer_id = #{row.buyerId,jdbcType=BIGINT},
      </if>
      <if test="row.totalPrice != null">
        total_price = #{row.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="row.buyerName != null">
        buyer_name = #{row.buyerName,jdbcType=VARCHAR},
      </if>
      <if test="row.addressPo != null">
        addressPo = #{row.addressPo,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=TINYINT},
      </if>
      <if test="row.isDeleted != null">
        is_deleted = #{row.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.paymentedAt != null">
        paymented_at = #{row.paymentedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.deliveredAt != null">
        delivered_at = #{row.deliveredAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderPo
    set id = #{row.id,jdbcType=BIGINT},
      buyer_id = #{row.buyerId,jdbcType=BIGINT},
      total_price = #{row.totalPrice,jdbcType=DECIMAL},
      buyer_name = #{row.buyerName,jdbcType=VARCHAR},
      addressPo = #{row.addressPo,jdbcType=VARCHAR},
      phone = #{row.phone,jdbcType=VARCHAR},
      `status` = #{row.status,jdbcType=TINYINT},
      is_deleted = #{row.isDeleted,jdbcType=TINYINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      paymented_at = #{row.paymentedAt,jdbcType=TIMESTAMP},
      delivered_at = #{row.deliveredAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    update orderPo
    <set>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="buyerName != null">
        buyer_name = #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="addressPo != null">
        addressPo = #{addressPo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentedAt != null">
        paymented_at = #{paymentedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveredAt != null">
        delivered_at = #{deliveredAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    update orderPo
    set buyer_id = #{buyerId,jdbcType=BIGINT},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      buyer_name = #{buyerName,jdbcType=VARCHAR},
      addressPo = #{addressPo,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      paymented_at = #{paymentedAt,jdbcType=TIMESTAMP},
      delivered_at = #{deliveredAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
  
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `order`
  </select>
  <select id="selectById" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `order`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="pagination" parameterType="com.blue.shop.util.Pagination" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `order`
	order by id desc
    limit #{offset, jdbcType=BIGINT} ,#{limit,jdbcType=INTEGER}
  </select>
  <select id="countAll" resultType="java.lang.Long">
    select count(*)
    from `order`
  </select>
  <insert id="insert" parameterType="com.blue.shop.mybatis.entity.OrderPo" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into `order` (id, buyer_id, total_price,
      buyer_name, address, phone,
    commune, district, city, note,
      `status`, is_deleted, created_at, 
      updated_at, paymented_at, delivered_at
      )
    values (#{id,jdbcType=BIGINT}, #{buyerId,jdbcType=BIGINT}, #{totalPrice,jdbcType=DECIMAL}, 
      #{buyerName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{commune,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{note,jdbcType=LONGVARCHAR},
      #{status,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP},
      #{updatedAt,jdbcType=TIMESTAMP}, #{paymentedAt,jdbcType=TIMESTAMP}, #{deliveredAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updatePaymentedById" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    update `order`
    <set>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentedAt != null">
        paymented_at = #{paymentedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStatusOrder" parameterType="com.blue.shop.mybatis.entity.OrderPo">
    update `order`
    <set>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveredAt != null">
        delivered_at = #{deliveredAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOrdersByUserId" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
	from `order`
	where buyer_id = #{userId,jdbcType=BIGINT}
	order by id desc
    limit #{pagination.offset, jdbcType=BIGINT} ,#{pagination.limit,jdbcType=INTEGER}
  </select>
  <update id="softDeleteById" parameterType="map">
    update `order`
    set is_deleted = #{isDeleted,jdbcType=TINYINT},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="countByUserId" resultType="java.lang.Long">
    select count(*)
    from `order`
    where buyer_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from `order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
</mapper>