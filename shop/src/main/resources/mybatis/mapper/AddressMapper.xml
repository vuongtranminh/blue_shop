<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blue.shop.mybatis.dao.AddressMapper">
  <resultMap id="BaseResultMap" type="com.blue.shop.mybatis.entity.AddressPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="commune" jdbcType="VARCHAR" property="commune" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, address, commune, district, city, `type`, `name`, phone, created_at, updated_at
  </sql>
<!--   <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, addressPo, commune, district, city, `type`, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.blue.shop.mybatis.entity.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from addressPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      orderPo by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from addressPo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from addressPo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blue.shop.mybatis.entity.AddressExample">
    delete from addressPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    insert into addressPo (id, user_id, addressPo,
      commune, district, city, 
      `type`, created_at, updated_at
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{addressPo,jdbcType=VARCHAR},
      #{commune,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    insert into addressPo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addressPo != null">
        addressPo,
      </if>
      <if test="commune != null">
        commune,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="addressPo != null">
        #{addressPo,jdbcType=VARCHAR},
      </if>
      <if test="commune != null">
        #{commune,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blue.shop.mybatis.entity.AddressExample" resultType="java.lang.Long">
    select count(*) from addressPo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update addressPo
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.addressPo != null">
        addressPo = #{row.addressPo,jdbcType=VARCHAR},
      </if>
      <if test="row.commune != null">
        commune = #{row.commune,jdbcType=VARCHAR},
      </if>
      <if test="row.district != null">
        district = #{row.district,jdbcType=VARCHAR},
      </if>
      <if test="row.city != null">
        city = #{row.city,jdbcType=VARCHAR},
      </if>
      <if test="row.type != null">
        `type` = #{row.type,jdbcType=TINYINT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update addressPo
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      addressPo = #{row.addressPo,jdbcType=VARCHAR},
      commune = #{row.commune,jdbcType=VARCHAR},
      district = #{row.district,jdbcType=VARCHAR},
      city = #{row.city,jdbcType=VARCHAR},
      `type` = #{row.type,jdbcType=TINYINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    update addressPo
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="addressPo != null">
        addressPo = #{addressPo,jdbcType=VARCHAR},
      </if>
      <if test="commune != null">
        commune = #{commune,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    update addressPo
    set user_id = #{userId,jdbcType=BIGINT},
      addressPo = #{addressPo,jdbcType=VARCHAR},
      commune = #{commune,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
  </select>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="pagination" parameterType="com.blue.shop.util.Pagination" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    order by id desc
    limit #{offset, jdbcType=BIGINT} ,#{limit,jdbcType=INTEGER}
  </select>
  <select id="countAll" resultType="java.lang.Long">
    select count(*)
    from address
  </select>
  <insert id="insert" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    insert into address (id, user_id, address,
      commune, district, city, 
      `type`, `name`, phone, created_at, updated_at
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR},
      #{commune,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateById" parameterType="com.blue.shop.mybatis.entity.AddressPo">
    update address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="commune != null">
        commune = #{commune,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAddressesByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="countByUserId" resultType="java.lang.Long">
    select count(*)
    from address
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from address
    where id = #{id,jdbcType=BIGINT}
  </delete>
</mapper>